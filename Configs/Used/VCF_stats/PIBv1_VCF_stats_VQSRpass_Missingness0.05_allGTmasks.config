//General parameters for nextflow execution:
process.executor = "slurm"
process.clusterOptions = '--requeue'
//SLURM general submission options:
executor {
   queueSize = 300
   submitRateLimit = '100/5min'
}

//Input parameters for the pipeline:
//Directory for final outputs:
params.run_name = "PIBv1"
params.output_prefix = "/gpfs/gibbs/pi/tucci/pfr8/Friedlaender/AnalysisFreezes"
params.output_dir = "${params.output_prefix}/${params.run_name}_VCFstats"

//Suffix for output logs to distinguish between runs:
params.run_suffix = "VQSRpassMissingness0.05AllGTmasks"

//Filters:
//Argument string to supply filter list:
//e.g. "" for no filters, "-f PASS" for only PASS filter
params.filterstr = "-i '(FILTER!~\"Missingness0.05\"&&FILTER!~\"LowQual\"&&FILTER!~\"VQSRTrancheSNP99.90to100.00+\"&&FILTER!~\"VQSRTrancheSNP99.90to100.00\"&&FILTER!~\"VQSRTrancheINDEL99.90to100.00+\"&&FILTER!~\"VQSRTrancheINDEL99.90to100.00\"&&FILTER!~\"VQSRTrancheINDEL99.50to99.90\"&&FILTER!~\"VQSRTrancheINDEL99.00to99.50\")||FILTER==\"PASS\"'"
//Argument string to supply include expression to bcftools +trio-stats and +smpl-stats:
//e.g. "-i 'DP<{10,20,30,40,50}'" to bin at various min depths, "" for no binning
params.includestr = ""

//Default paths, globs, and regexes:
params.vcf_glob = "${params.output_dir}/masked_byChrom/*.vcf.gz"
//Regex to pull out the chromosome:
params.vcfchr_regex = ~/_chr(\p{Alnum}+)_allmasks$/
//For the trio stats:
params.trio_ped = "${params.output_dir}/trio/PIBv1_trios.ped"
//For the array data for gtcheck:
params.array_vcf = "${params.output_dir}/array/TucciCombinedDatasetHumanOrigins_noreffix_flipswap_headercontigsfixed.vcf.gz"
params.array_sites = "${params.output_dir}/array/TucciCombinedDatasetHumanOrigins_sites.tsv"

//Debugging options:
trace {
   enabled = true
   fields = 'task_id,name,hash,status,exit,cpus,memory,time,submit,start,complete,duration,%cpu,%mem,peak_rss,workdir'
   file = "${params.output_dir}/${params.run_name}_VCFstats_${params.run_suffix}_nextflow_trace.txt"
   raw = true
   overwrite = true
}

//Reference-related parameters for the pipeline:
profiles {
   hs37d5 {
      //Reference-related parameters for the pipeline:
      params.ref_prefix = "/gpfs/gibbs/pi/tucci/pfr8/refs"
      params.ref = "${params.ref_prefix}/1kGP/hs37d5/hs37d5.fa"
   }

   farnam {
      params.mod_bcftools = "bcftools/f4dee4b"
      params.mod_htslib = "htslib/6366029"
      process.queue = 'pi_tucci,general'
   }

   ruddle {
      params.mod_bcftools = "bcftools/1eba45c"
      params.mod_htslib = "htslib/a1dec95"
   }
}

//SLURM submission parameters:
//Memory specified in GiB unless otherwise indicated
//bcftools stats
params.stats_cpus = 1
params.stats_mem = 1
params.stats_timeout = '6h'
//bcftools +smpl-stats
params.smplstats_cpus = 1
params.smplstats_mem = 1
params.smplstats_timeout = '12h'
//bcftools +trio-stats
params.triostats_cpus = 1
params.triostats_mem = 1
params.triostats_timeout = '12h'
//bcftools gtcheck
params.gtcheck_cpus = 1
params.gtcheck_mem = 1
params.gtcheck_timeout = '6h'
